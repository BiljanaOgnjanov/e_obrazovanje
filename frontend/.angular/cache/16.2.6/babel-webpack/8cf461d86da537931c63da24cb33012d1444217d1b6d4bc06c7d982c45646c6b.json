{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../servisi/korisnik.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../header/header.component\";\n//import { KorisniciService } from '../servisi/korisnici.service';\nexport class LoginComponent {\n  constructor(korisnikServis, router) {\n    this.korisnikServis = korisnikServis;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.greska = '';\n    //napravi fju koja ce na osnovu imena reci da li je korisnik\\\n    this.tip = 'student';\n  }\n  login() {\n    if (this.username == \"\") {\n      this.greska = \"Nije uneto korisnicko ime\";\n    } else if (this.password == \"\") {\n      this.greska = \"Nije uneta lozinka\";\n    } else {\n      if (this.username = \"sanja\") {\n        this.tip = \"nastavnik\";\n      }\n      this.korisnikServis.prijava(this.username, this.password).subscribe(data => {\n        if (data == null) {\n          this.greska = 'Takav korisnik u bazi ne postoji';\n        } else {\n          localStorage.setItem('ulogovan', JSON.stringify(data));\n          if (this.tip == 'student') {\n            this.router.navigate(['/student']);\n          } else if (this.tip == 'nastavnik') {\n            this.router.navigate(['/nastavnik']);\n          } else {\n            this.greska = 'Nepoznat tip korisnika';\n          }\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.KorisnikService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 4,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [2, \"color\", \"red\"], [3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵelementStart(1, \"h3\");\n        i0.ɵɵtext(2, \"Prijava\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\");\n        i0.ɵɵtext(6, \"Korisnicko ime:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"td\")(8, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"tr\")(10, \"td\");\n        i0.ɵɵtext(11, \"Lozinka:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"td\")(13, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"span\", 2);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵtext(18);\n        i0.ɵɵelementStart(19, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(20, \"Prijava\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.greska);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\\n\", ctx.username, \"\\n\");\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.HeaderComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","korisnikServis","router","username","password","greska","tip","login","prijava","subscribe","data","localStorage","setItem","JSON","stringify","navigate","_","i0","ɵɵdirectiveInject","i1","KorisnikService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_8_listener","$event","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_Template_button_click_19_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Mirko\\Desktop\\eobrazovanje\\frontend\\src\\app\\login\\login.component.ts","C:\\Users\\Mirko\\Desktop\\eobrazovanje\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { KorisnikService } from '../servisi/korisnik.service';\n//import { KorisniciService } from '../servisi/korisnici.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private korisnikServis: KorisnikService, private router: Router){}\n  username:string='';\n  password:string='';\n  greska:string='';\n\n  //napravi fju koja ce na osnovu imena reci da li je korisnik\\\n\n  tip:string='student';\n\n\n  login(){\n    if (this.username == \"\") {\n      this.greska = \"Nije uneto korisnicko ime\";\n    }\n    else if (this.password == \"\") {\n      this.greska = \"Nije uneta lozinka\";\n    }\n    else {\n    if (this.username = \"sanja\") {\n      this.tip = \"nastavnik\";\n    }\n      this.korisnikServis.prijava(this.username, this.password).subscribe(data => {\n          if (data == null) {\n            this.greska = 'Takav korisnik u bazi ne postoji';\n          } else {\n            localStorage.setItem('ulogovan', JSON.stringify(data));\n            if (this.tip == 'student') {\n              this.router.navigate(['/student']);\n            } else if (this.tip == 'nastavnik') {\n              this.router.navigate(['/nastavnik']);\n            } else {\n              this.greska = 'Nepoznat tip korisnika';\n            }\n          }\n        });\n\n  }\n  }\n}\n","<app-header></app-header>\n<h3>Prijava</h3>\n<table>\n  <tr>\n    <td>Korisnicko ime:</td>\n    <td><input type=\"text\" [(ngModel)]=\"username\"></td>\n  </tr>\n  <tr>\n    <td>Lozinka:</td>\n    <td><input type=\"password\" [(ngModel)]=\"password\"></td>\n  </tr>\n</table>\n<br>\n<span style=\"color: red;\">{{greska}}</span> <br>\n{{username}}\n<button (click)=\"login()\">Prijava</button>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}