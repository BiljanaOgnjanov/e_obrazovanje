{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminostaloService {\n  constructor(http) {\n    this.http = http;\n    this.adminUrl = 'http://localhost:8080/admin';\n  }\n  // Fetch all students\n  getAllStudents() {\n    return this.http.get(`${this.adminUrl}/students`);\n  }\n  // Fetch all professors\n  getAllProfessors() {\n    return this.http.get(`${this.adminUrl}/professors`);\n  }\n  // Add a new student\n  addStudent(student) {\n    return this.http.post(`${this.adminUrl}/add-student`, student);\n  }\n  // Add a new professor\n  addProfessor(professor) {\n    return this.http.post(`${this.adminUrl}/add-professor`, professor);\n  }\n  // Update a user (Student or Professor)\n  updateUser(user) {\n    return this.http.put(`${this.adminUrl}/update`, user);\n  }\n  // Delete a user by username\n  deleteUser(username) {\n    return this.http.delete(`${this.adminUrl}/delete/${username}`);\n  }\n  // Method to reset overenSemestar to \"neoveren\" for all students\n  resetOverenSemestar() {\n    return this.http.put(`${this.adminUrl}/resetOverenSemestar`, null);\n  }\n  static #_ = this.ɵfac = function AdminostaloService_Factory(t) {\n    return new (t || AdminostaloService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminostaloService,\n    factory: AdminostaloService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AdminostaloService","constructor","http","adminUrl","getAllStudents","get","getAllProfessors","addStudent","student","post","addProfessor","professor","updateUser","user","put","deleteUser","username","delete","resetOverenSemestar","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mirko\\Desktop\\eobrazovanje\\frontend\\src\\app\\servisi\\adminostalo.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Student } from '../modeli/student';\nimport { Nastavnik } from '../modeli/nastavnik';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminostaloService {\n\n  adminUrl = 'http://localhost:8080/admin'\n\n  constructor(private http: HttpClient) { }\n\n   // Fetch all students\n   getAllStudents(): Observable<Student[]> {\n    return this.http.get<Student[]>(`${this.adminUrl}/students`);\n  }\n\n  // Fetch all professors\n  getAllProfessors(): Observable<Nastavnik[]> {\n    return this.http.get<Nastavnik[]>(`${this.adminUrl}/professors`);\n  }\n\n  // Add a new student\n  addStudent(student: Student): Observable<Student> {\n    return this.http.post<Student>(`${this.adminUrl}/add-student`, student);\n  }\n\n  // Add a new professor\n  addProfessor(professor: Nastavnik): Observable<Nastavnik> {\n    return this.http.post<Nastavnik>(`${this.adminUrl}/add-professor`, professor);\n  }\n\n  // Update a user (Student or Professor)\n  updateUser(user: Student | Nastavnik): Observable<any> {\n    return this.http.put<any>(`${this.adminUrl}/update`, user);\n  }\n\n  // Delete a user by username\n  deleteUser(username: string): Observable<string> {\n    return this.http.delete<string>(`${this.adminUrl}/delete/${username}`);\n  }\n\n  // Method to reset overenSemestar to \"neoveren\" for all students\n  resetOverenSemestar(): Observable<string> {\n    return this.http.put<string>(`${this.adminUrl}/resetOverenSemestar`, null);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,QAAQ,GAAG,6BAA6B;EAEA;EAEvC;EACAC,cAAcA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,QAAQ,WAAW,CAAC;EAC9D;EAEA;EACAG,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,QAAQ,aAAa,CAAC;EAClE;EAEA;EACAI,UAAUA,CAACC,OAAgB;IACzB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACN,QAAQ,cAAc,EAAEK,OAAO,CAAC;EACzE;EAEA;EACAE,YAAYA,CAACC,SAAoB;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACO,IAAI,CAAY,GAAG,IAAI,CAACN,QAAQ,gBAAgB,EAAEQ,SAAS,CAAC;EAC/E;EAEA;EACAC,UAAUA,CAACC,IAAyB;IAClC,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAM,GAAG,IAAI,CAACX,QAAQ,SAAS,EAAEU,IAAI,CAAC;EAC5D;EAEA;EACAE,UAAUA,CAACC,QAAgB;IACzB,OAAO,IAAI,CAACd,IAAI,CAACe,MAAM,CAAS,GAAG,IAAI,CAACd,QAAQ,WAAWa,QAAQ,EAAE,CAAC;EACxE;EAEA;EACAE,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAAChB,IAAI,CAACY,GAAG,CAAS,GAAG,IAAI,CAACX,QAAQ,sBAAsB,EAAE,IAAI,CAAC;EAC5E;EAAC,QAAAgB,CAAA,G;qBAvCUnB,kBAAkB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBxB,kBAAkB;IAAAyB,OAAA,EAAlBzB,kBAAkB,CAAA0B,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}