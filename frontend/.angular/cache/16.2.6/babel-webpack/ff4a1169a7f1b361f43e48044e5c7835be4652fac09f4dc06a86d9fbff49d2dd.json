{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NastavniksaradniciService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/profesori';\n  }\n  getCoursesByProfessor(username) {\n    return this.http.get(`${this.baseUrl}/predmeti/${username}`);\n  }\n  getProfessorsNotTeachingCourse(idPredmeta) {\n    return this.http.get(`${this.baseUrl}/nePredaju/${idPredmeta}`);\n  }\n  addProfessorToCourse(korisnickoIme, idPredmeta) {\n    const params = new HttpParams().set('korisnickoIme', korisnickoIme).set('idPredmeta', idPredmeta.toString());\n    return this.http.post(`${this.baseUrl}/dodajPracenje`, null, {\n      params\n    });\n  }\n  static #_ = this.ɵfac = function NastavniksaradniciService_Factory(t) {\n    return new (t || NastavniksaradniciService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NastavniksaradniciService,\n    factory: NastavniksaradniciService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","NastavniksaradniciService","constructor","http","baseUrl","getCoursesByProfessor","username","get","getProfessorsNotTeachingCourse","idPredmeta","addProfessorToCourse","korisnickoIme","params","set","toString","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mirko\\Desktop\\eobrazovanje\\frontend\\src\\app\\servisi\\nastavniksaradnici.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Nastavnik } from '../modeli/nastavnik';\nimport { Predmet } from '../modeli/predmet';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NastavniksaradniciService {\n  private baseUrl = 'http://localhost:8080/profesori';\n\n  constructor(private http: HttpClient) {}\n\n  getCoursesByProfessor(username: string): Observable<Predmet[]> {\n    return this.http.get<Predmet[]>(`${this.baseUrl}/predmeti/${username}`);\n  }\n\n  getProfessorsNotTeachingCourse(idPredmeta: number): Observable<Nastavnik[]> {\n    return this.http.get<Nastavnik[]>(`${this.baseUrl}/nePredaju/${idPredmeta}`);\n  }\n\n  addProfessorToCourse(korisnickoIme: string, idPredmeta: number): Observable<any> {\n    const params = new HttpParams()\n      .set('korisnickoIme', korisnickoIme)\n      .set('idPredmeta', idPredmeta.toString());\n    return this.http.post(`${this.baseUrl}/dodajPracenje`, null, { params });\n  }\n}\n"],"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAQ7D,OAAM,MAAOC,yBAAyB;EAGpCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,iCAAiC;EAEZ;EAEvCC,qBAAqBA,CAACC,QAAgB;IACpC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,OAAO,aAAaE,QAAQ,EAAE,CAAC;EACzE;EAEAE,8BAA8BA,CAACC,UAAkB;IAC/C,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAc,GAAG,IAAI,CAACH,OAAO,cAAcK,UAAU,EAAE,CAAC;EAC9E;EAEAC,oBAAoBA,CAACC,aAAqB,EAAEF,UAAkB;IAC5D,MAAMG,MAAM,GAAG,IAAIZ,UAAU,EAAE,CAC5Ba,GAAG,CAAC,eAAe,EAAEF,aAAa,CAAC,CACnCE,GAAG,CAAC,YAAY,EAAEJ,UAAU,CAACK,QAAQ,EAAE,CAAC;IAC3C,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,GAAG,IAAI,CAACX,OAAO,gBAAgB,EAAE,IAAI,EAAE;MAAEQ;IAAM,CAAE,CAAC;EAC1E;EAAC,QAAAI,CAAA,G;qBAlBUf,yBAAyB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAzBpB,yBAAyB;IAAAqB,OAAA,EAAzBrB,yBAAyB,CAAAsB,IAAA;IAAAC,UAAA,EAFxB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}